/* eslint-disable react/no-unknown-property */
/* eslint-disable react/no-children-prop */
/* eslint-disable react/prop-types */

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Merged, useGLTF } from "@react-three/drei";
import React, { createContext, useContext, useMemo, useRef } from "react";
import { useBoolean } from "react-use";
import ObjectTransformControls from "../components/ObjectTransformControls";
import { useSceneObjects } from "../store/useSceneObjects";
import { useUpdateObjectPosition } from "../utils/hooks";

const context = createContext();
export function FlowerVaseInstances({ children, ...props }) {
  const { nodes } = useGLTF("/flower_vase-transformed.glb");
  const instances = useMemo(
    () => ({
      Object: nodes.Object_10,
      Object1: nodes.Object_11,
      Object2: nodes.Object_12,
      Object3: nodes.Object_4,
    }),
    [nodes]
  );
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => (
        <context.Provider value={instances} children={children} />
      )}
    </Merged>
  );
}

export function FlowerVase(props) {
  const instances = useContext(context);

  const [active, toggleActive] = useBoolean(false);
  const [localPosition, setLocalPosition] = React.useState(props.position);
  const { updateObjectPosition } = useSceneObjects();
  const objectRef = useRef();

  useUpdateObjectPosition(props.id, localPosition, updateObjectPosition);

  return (
    <>
      <group
        {...props}
        dispose={null}
        onClick={() => {
          toggleActive();
        }}
        onPointerMissed={(e) => {
          e.type === "click" && toggleActive(false);
        }}
        ref={objectRef}
      >
        <group
          position={[0, 0.28, 0]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.16}
        >
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group
              position={[0, 0.12, 0]}
              rotation={[-0.35, Math.PI / 2, 0]}
              scale={[0.12, 0.05, 0.12]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0, 0.12, 0]}
              rotation={[Math.PI, 0, 2.79]}
              scale={[0.13, 0.05, 0.13]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0, 0.12, 0]}
              rotation={[0.35, -Math.PI / 2, 0]}
              scale={[0.11, 0.04, 0.11]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0.21, 0.15, -0.01]}
              rotation={[0.59, -1.28, 0.48]}
              scale={[0.12, 0.05, 0.12]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0, 0.12, 0]}
              rotation={[0.16, -0.73, -0.13]}
              scale={[0.09, 0.04, 0.09]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0, 0.12, 0]}
              rotation={[0.18, 0.83, -0.38]}
              scale={[0.1, 0.04, 0.1]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0, 0.12, 0]}
              rotation={[2.98, 0.73, 3.01]}
              scale={[0.11, 0.04, 0.11]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0.11, 0.12, 0.06]}
              rotation={[3, -0.56, 2.82]}
              scale={[0.11, 0.04, 0.11]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group
              position={[0, 0.12, 0]}
              rotation={[0, 0, -0.35]}
              scale={[0.12, 0.05, 0.12]}
            >
              <instances.Object />
              <instances.Object1 />
              <instances.Object2 />
            </group>
            <group rotation={[0, 0, -Math.PI / 2]}>
              <instances.Object3 />
            </group>
          </group>
        </group>
      </group>
      {active && (
        <ObjectTransformControls
          object={objectRef.current}
          setLocalPosition={() => setLocalPosition}
        />
      )}
    </>
  );
}

useGLTF.preload("/flower_vase-transformed.glb");
